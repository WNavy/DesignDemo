装饰者模式：不必改变原类文件，动态的扩展一个对象的功能。通过创建一个包装对象来包裹真实的对象。

角色构件：
1、一个接口，提供规范责任
2、一个抽象装饰类，实现接口
3、具体装饰类，继承抽象的装饰类

优点：通过使用不同的具体装饰类以及这些装饰类的排列组合，可以创建很多不同的行为组合。
缺点：使用装饰模式会比使用继承更多的对象，使得查错变得困难